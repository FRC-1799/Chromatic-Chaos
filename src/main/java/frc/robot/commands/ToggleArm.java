package frc.robot.commands;

import java.util.function.DoubleSupplier;

import edu.wpi.first.math.MathUtil;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj2.command.InstantCommand;
import edu.wpi.first.wpilibj2.command.RunCommand;
import frc.robot.Constants;
import frc.robot.subsystems.ArmSubsystem;

/**
 * Have the robot drive tank style.
 */
public class ToggleArm extends RunCommand {
  // setActive setActive;
  ArmSubsystem arm;
  /**
   * Creates a new ArcadeDrive command.
   *
   * @param left       The control input for the left side of the drive
   * @param right      The control input for the right sight of the drive
   * @param driveSubsystem The driveSubsystem subsystem to drive
   */
  public ToggleArm(final ArmSubsystem Arm) {
      
      // super(
      //   ()->{
          
      //       arm.move();
      //   },
      //   arm
      //   );
      super(
        ()->{
          
            Arm.move();
        },
        Arm
        );
       arm=Arm; 
    }
    // @Override 
    // public void initialize(){
    //   setActive = new setActive(arm);
    //   arm.isActive=true;
    //   setActive.schedule();
    // }
    @Override
    public void initialize(){
      arm.isActive=true;
    }
    @Override
    public boolean isFinished() { 
             // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ISFINISHED 
      return !arm.isActive; 
           // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ISFINISHED 
    } 

      
  }
