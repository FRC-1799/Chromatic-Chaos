package frc.robot.commands;

import java.util.function.DoubleSupplier;

import edu.wpi.first.math.MathUtil;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj2.command.CommandBase;
import edu.wpi.first.wpilibj2.command.InstantCommand;
import edu.wpi.first.wpilibj2.command.RunCommand;
import frc.robot.Constants;
import frc.robot.subsystems.ArmSubsystem;
import frc.robot.subsystems.LimitSwitch;

/**
 * Have the robot drive tank style.
 */
public class ToggleArm extends CommandBase {
  // setActive setActive;
  ArmSubsystem arm;
  Boolean hasHitTop=false;
  LimitSwitch top = new LimitSwitch(Constants.arm.topSwitch);
  LimitSwitch bottom = new LimitSwitch(Constants.arm.bottomSwitch);
  /**
   * Creates a new ArcadeDrive command.
   *
   * @param left       The control input for the left side of the drive
   * @param right      The control input for the right sight of the drive
   * @param driveSubsystem The driveSubsystem subsystem to drive
   */
  public ToggleArm(final ArmSubsystem Arm) {

    arm=Arm;
    }


    @Override
    public void execute(){
      if (top.getVal()){
        hasHitTop=true;
      }
      if (!hasHitTop){
        new moveArm(arm, Constants.arm.ArmUp);
      }
      else{
        new moveArm(arm, Constants.arm.ArmDown);
      }

    }

    @Override
    public void initialize(){
      
    }
    @Override
    public boolean isFinished() { 
             // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ISFINISHED 
      return (bottom.getVal() && hasHitTop); 
           // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ISFINISHED 
    } 
    @Override
    public void end(boolean interrupted){
      new moveArm(arm, 0);
    }

      
  }
